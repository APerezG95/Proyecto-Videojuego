Changelog del juego:


_20/04/2016_
→ Implementada clase “personaje” que incluye todos los elementos controlables (IA o humano) del escenario. La clase tiene los siguientes atributos:
	--> Tipo. Define la clase o especialización del personaje (tipo enum).
	--> Ataque físico. Cantidad de daño capaz de causar en un ataque directo (sin consumo).
	--> Ataque de habilidad. Cantidad de daño capaz de causar en un ataque especial. *
	--> Salud. Cantidad de puntos de aguante (daño que puede soportar).
	--> Defensa. Cantidad de puntos de daño capaz de disipar al recibir un ataque (porcentual).
	--> Defensa de habilidad. Idem a la anterior pero con ataques de habilidad.
	--> Daño. Daño base de habilidad usada (multiplicar por el ataque de habilidad).
	--> Bonificación. Parámetro para saber la modificación que tiene un personaje.
	--> Velocidad. Capacidad máxima para desplazarse por el campo en cada turno.
	--> Bando. Parámetro que define si es aliado, neutral o enemigo.
	--> Nivel. Caracteriza los atributos del personaje en función de su experiencia adquirida.
	--> Experiencia. Puntos que sirven para subir de nivel.
	--> Posición. Caracteriza su posición actual en el mapa.
	--> Aguante. Capacidad para realizar ataques de habilidad, se consume con su uso.
	--> Disponibilidad. Parámetro para conocer el estado del personaje.
* Esto incluye curaciones.

La clase cuenta con los siguientes métodos:
	--> Atacar. Devuelve el valor calculado del daño que administra en el ataque.
	    En función del parámetro que se le pase devuelve daño físico o de habilidad. Resta Aguante.
	--> Defender. Devuelve el valor de la reducción de daño total en función del recibido.
	--> Actualizar. Actualiza las características del personaje después de la modificación. Comprueba también la posibilidad o no de ataque.
	--> Moverse. Calcula la velocidad y mueve al personaje sobre el mapa.

→ Implementada clase “Posición” Para definir dos coordenadas en el mapa.


_21/04/2016_
	--> Creación de la clase Objeto
	--> Decisión de limitar a 1 ítem por personaje jugable.
	--> Creación de la clase Bonus. //No me entero de nada

_22/04/2016_
Modificaciones a la clase CPersonaje:
	--> Eliminada la variable enum con vistas a implementar una serie de clases heredadas.
	--> Cambiado el tipo de datos de defensas a float (valor porcentual).
	--> Eliminada la variable "Dolor" (hasta que sepamos para qué servía).
	--> Añadidos comentarios para que no nos pase más lo de la variable "Dolor".
	--> Añadidas las variables salud y aguante máximo para comprobar la comparativa entre lo actual y lo total.
	--> La variable m_iBando ahora es bool.
	--> Añadidas las cabeceras de los archivos.
	--> Corregidas las funciones ya implementadas para los cambios anteriores.
	--> Declarada la función Añadir_Buff para renovar el efecto del objeto obtenido (por definir).
	--> Añadida la variable m_bObjOn para comprobar si se ha aplicado o no el buff del objeto.

Resto de modificaciones:
	--> Añadida la clase CMapa.
	--> Creada la matriz de la clase CMapa, constructor y destructor de memoria dinámica.
	--> Implementado el tipo de enum m_eEnte para saber qué hay en cada celda.


_05/05/2016_
	--> Constructor "por defecto" de la clase CItem (Siempre necesita un objeto de tipo CBonus).
	--> Constructor por defecto de la clase CPosicion.
	--> Función de inicialización virtual de CPersonaje.
	--> Inicialización de la clase CBasket (por retocar).

_06/05/2016_
	--> Implementado el metodo moverse del personaje. Comprueba que la posición deseada está en el rango del personaje,
	    comprueba si hay algún tipo de obstáculo y si hay un objeto llama a la función que lo recoge.(por retocar)
	--> Añadido método Recoger_Objeto al personaje. Lo recoge y llama a la funcion aplicar buff (todavia por implementar).
	--> Añadido metodo ComprobarContenido al mapa que retorna lo que hay en una casilla. Usada en la funcion moverse
	--> No se podrá mover a una casilla donde haya un objeto si ya tienes uno.
	--> Añadida funcion ActualizarMapa.

-07/05/2016_
	--> Cambiada la clase mapa, ya no utiliza enum sino objetos de cada tipo y un enum para que cada objeto sepa qué tipo es.
	--> Implementada la función recoger objeto para personajes (No tiene comprobación propia, debe hacerse fuera!).
	--> Corregidos todos los problemas del cambio anterior.
	--> Añadida la clase CEnte de la que heredan todos los integrantes del mapa.
	--> Añadido un enum a la clase CEnte para que el constructor de cada clase derivada sepa qué tipo es.
	--> Retocada la función Moverse de CPersonaje (aun por terminar).







